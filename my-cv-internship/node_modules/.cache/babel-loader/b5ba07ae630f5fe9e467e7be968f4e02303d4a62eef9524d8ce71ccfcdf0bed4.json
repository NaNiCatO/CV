{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bbcom\\\\Documents\\\\GitHub\\\\CV\\\\my-cv-internship\\\\src\\\\components\\\\Snow.js\";\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Unit = () => {\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    style: {\n      position: 'fixed',\n      top: 100,\n      width: '1.5rem',\n      height: '1.5rem',\n      background: Math.random() * 10 < 1 ? 'pink' : 'whitesmoke',\n      // 10% chance of pink snow\n      borderRadius: '50%',\n      zIndex: 1,\n      // Set a negative value to move it to the back\n      opacity: 0.8 // Make it slightly transparent\n    },\n    drag: true\n    // make snow fall from top of screen and random x position\n    ,\n    initial: {\n      y: -200,\n      x: Math.random() * 1700 - 850\n    }\n    // make snow fall '39.5rem' 630\n    ,\n    animate: {\n      y: 630\n    }\n    // snow falls forever and random delay and falling speed\n    ,\n    transition: {\n      duration: Math.random() * 4 + 6,\n      repeat: Infinity,\n      repeatDelay: Math.random() * 5 + 2,\n      delay: Math.random() * 10\n    }\n    // make snow fall faster at the end\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = Unit;\nconst Snow = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Array.from({\n      length: 50\n    }).map((_, i) => /*#__PURE__*/_jsxDEV(Unit, {}, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Snow;\nexport default Snow;\nvar _c, _c2;\n$RefreshReg$(_c, \"Unit\");\n$RefreshReg$(_c2, \"Snow\");","map":{"version":3,"names":["motion","jsxDEV","_jsxDEV","Unit","div","style","position","top","width","height","background","Math","random","borderRadius","zIndex","opacity","drag","initial","y","x","animate","transition","duration","repeat","Infinity","repeatDelay","delay","fileName","_jsxFileName","lineNumber","columnNumber","_c","Snow","children","Array","from","length","map","_","i","_c2","$RefreshReg$"],"sources":["C:/Users/bbcom/Documents/GitHub/CV/my-cv-internship/src/components/Snow.js"],"sourcesContent":["\r\nimport { motion } from 'framer-motion';\r\n\r\n\r\nconst Unit = () => {\r\n  return (\r\n    <motion.div\r\n      style={{\r\n        position: 'fixed',\r\n        top: 100,\r\n        width: '1.5rem',\r\n        height: '1.5rem',\r\n        background: Math.random()*10 < 1 ? 'pink': 'whitesmoke', // 10% chance of pink snow\r\n        borderRadius: '50%',\r\n        zIndex: 1, // Set a negative value to move it to the back\r\n        opacity: 0.8 // Make it slightly transparent\r\n      }}\r\n      drag\r\n      // make snow fall from top of screen and random x position\r\n      initial={{ y: -200 ,x: (Math.random() * 1700)-850}}\r\n      // make snow fall '39.5rem' 630\r\n      animate={{ y: 630 }}\r\n      // snow falls forever and random delay and falling speed\r\n      transition={{ duration: (Math.random() * 4)+6, repeat: Infinity, repeatDelay: (Math.random()*5)+2 , delay: Math.random()*10}}\r\n      // make snow fall faster at the end\r\n      \r\n    />\r\n  );\r\n};\r\n\r\nconst Snow = () => {\r\n  return (\r\n    <div>\r\n      {Array.from({ length: 50 }).map((_, i) => (\r\n        <Unit key={i} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Snow;\r\n"],"mappings":";AACA,SAASA,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACjB,oBACED,OAAA,CAACF,MAAM,CAACI,GAAG;IACTC,KAAK,EAAE;MACLC,QAAQ,EAAE,OAAO;MACjBC,GAAG,EAAE,GAAG;MACRC,KAAK,EAAE,QAAQ;MACfC,MAAM,EAAE,QAAQ;MAChBC,UAAU,EAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAC,EAAE,GAAG,CAAC,GAAG,MAAM,GAAE,YAAY;MAAE;MACzDC,YAAY,EAAE,KAAK;MACnBC,MAAM,EAAE,CAAC;MAAE;MACXC,OAAO,EAAE,GAAG,CAAC;IACf,CAAE;IACFC,IAAI;IACJ;IAAA;IACAC,OAAO,EAAE;MAAEC,CAAC,EAAE,CAAC,GAAG;MAAEC,CAAC,EAAGR,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,IAAI,GAAE;IAAG;IACjD;IAAA;IACAQ,OAAO,EAAE;MAAEF,CAAC,EAAE;IAAI;IAClB;IAAA;IACAG,UAAU,EAAE;MAAEC,QAAQ,EAAGX,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAE,CAAC;MAAEW,MAAM,EAAEC,QAAQ;MAAEC,WAAW,EAAGd,IAAI,CAACC,MAAM,CAAC,CAAC,GAAC,CAAC,GAAE,CAAC;MAAGc,KAAK,EAAEf,IAAI,CAACC,MAAM,CAAC,CAAC,GAAC;IAAE;IAC3H;EAAA;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAED,CAAC;AAEN,CAAC;AAACC,EAAA,GAxBI5B,IAAI;AA0BV,MAAM6B,IAAI,GAAGA,CAAA,KAAM;EACjB,oBACE9B,OAAA;IAAA+B,QAAA,EACGC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAE;IAAG,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBACnCrC,OAAA,CAACC,IAAI,MAAMoC,CAAC;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAChB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACU,GAAA,GARIR,IAAI;AAUV,eAAeA,IAAI;AAAC,IAAAD,EAAA,EAAAS,GAAA;AAAAC,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}